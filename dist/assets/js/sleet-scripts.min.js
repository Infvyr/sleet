/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/components/MobileMenu.js":
/*!********************************************!*\
  !*** ./assets/js/components/MobileMenu.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var MobileMenu = function MobileMenu() {
  var triggerMenu = document.getElementById("toggle-mobile-menu");
  var mobileMenu = document.getElementById("mobile-menu");
  if (!triggerMenu || !mobileMenu) return;
  triggerMenu.addEventListener("click", function () {
    var mobileMenuHeight = document.getElementById("mobile-menu-inner").offsetHeight;
    var activeClass = "is-active"; // toggle active class on trigger button
    // and operate the opened/closed state of mobile menu

    triggerMenu.classList.toggle(activeClass);

    if (!mobileMenu.classList.contains(activeClass)) {
      mobileMenu.classList.add(activeClass);
      mobileMenu.style.maxHeight = "".concat(mobileMenuHeight, "px");
    } else {
      mobileMenu.classList.remove(activeClass);
      mobileMenu.style.maxHeight = 0;
    }
  });
};

/* harmony default export */ __webpack_exports__["default"] = (MobileMenu);

/***/ }),

/***/ "./assets/js/components/Tabs.js":
/*!**************************************!*\
  !*** ./assets/js/components/Tabs.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var Tabs = function Tabs() {
  var tabs = document.querySelector(".tabs");
  var tabsBtns = tabs.querySelectorAll(".tabs__btn");
  var tabsContents = tabs.querySelectorAll(".tabs__content");

  function displayCurrentTab(current) {
    for (var i = 0; i < tabsContents.length; i++) {
      tabsContents[i].style.display = current === i ? "block" : "none";
    }
  }

  displayCurrentTab(0); // display first tab

  tabs.addEventListener("click", function (event) {
    if (event.target.className === "tabs__btn") {
      for (var i = 0; i < tabsBtns.length; i++) {
        if (event.target === tabsBtns[i]) {
          displayCurrentTab(i);
          break;
        }
      }
    }
  });
};

/* harmony default export */ __webpack_exports__["default"] = (Tabs);

/***/ }),

/***/ "./assets/js/sleet-scripts.js":
/*!************************************!*\
  !*** ./assets/js/sleet-scripts.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _components_MobileMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/MobileMenu */ "./assets/js/components/MobileMenu.js");
/* harmony import */ var _components_Tabs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Tabs */ "./assets/js/components/Tabs.js");


window.addEventListener("DOMContentLoaded", function () {
  try {
    Object(_components_MobileMenu__WEBPACK_IMPORTED_MODULE_0__["default"])();
    Object(_components_Tabs__WEBPACK_IMPORTED_MODULE_1__["default"])();
  } catch (error) {
    console.log(error);
  }
});

/***/ }),

/***/ 0:
/*!******************************************!*\
  !*** multi ./assets/js/sleet-scripts.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/vasilenovatchii/Local Sites/underscore/app/public/wp-content/themes/sleet/assets/js/sleet-scripts.js */"./assets/js/sleet-scripts.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,